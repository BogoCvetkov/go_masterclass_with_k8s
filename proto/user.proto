syntax = "proto3";

option go_package = "github.com/BogoCvetkov/go_mastercalss/pb";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "GRPC Gateway API";
        version: "1.0";
        contact: {
            name: "Bogo Tsvetkov";
            url: "https://www.linkedin.com/in/bogomil-cvetkov-766a37b5/";
            email: "cvetkov.bogomil@gmail.com";
        };
    };
};


message User {
    // Swagger
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "User type"
            description: "Platform user type"
        }

    };

    int64 id = 1;
    string username = 2;
    string full_name = 3;
    string email = 4;
    google.protobuf.Timestamp pass_changed_at = 5;
    google.protobuf.Timestamp created_at = 6;
}

// Create
message CreateUserReq {
    // Swagger
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Create User"
            description: "Register user params"
            required: ["username", "password", "full_name","email"]
        }

    };

    string username  = 1;
	string password  = 2;
	string full_name  = 3;
	string email     = 4;
}
message CreateUserRes {
    User user = 1;
}

// Login
message LoginUserReq {
    // Swagger
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Login User"
            description: "Login params"
            required: ["email", "password"]
        }

    };
    
    string password = 1;
    string email = 2;
}
message LoginUserRes {
    string token = 1;
    string refresh_token = 2;
    User user = 3;
}

// Refresh Token
message RefreshTokenReq  {
     // Swagger
     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Refresh token"
            description: "Refresh token params"
            required: ["token"]
        }

    };

	string token = 1;
}

message RefreshTokenRes {
    string token = 1;
}

// Verify Email
message VerifyEmailReq {
     // Swagger
     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            title: "Verify email"
            description: "Verify email params"
            required: ["email","code"]
        }

    };

    string email = 1;
    string code = 2;
 }

message VerifyEmailRes {
    string msg = 1;
}


service UserService {
    rpc CreateUser(CreateUserReq) returns (CreateUserRes) {
        option (google.api.http) = {
            post: "/user"
            body: "*"
        };

        // Swagger
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Register User Ednpoint"
            summary: "Use this endpoint to create new user in the system"
        };
    };

    rpc LoginUser(LoginUserReq) returns (LoginUserRes) {
        option (google.api.http) = {
            post: "/user/login"
            body: "*"
        };
         // Swagger
         option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Login"
            summary: "Use this endpoint to generate short-lived access and long-lived refresh token"
        };
    };

    rpc RefreshToken(RefreshTokenReq) returns (RefreshTokenRes) {
        option (google.api.http) = {
            post: "/user/refresh-token"
            body: "*"
        };
         // Swagger
         option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Refresh access token"
            summary: "Use this endpoint to issue a new access-token using the provided refresh token in /login route"
        };
    };

    rpc VerifyEmail(VerifyEmailReq) returns (VerifyEmailRes) {
        option (google.api.http) = {
            post: "/user/verify"
            body: "*"
        };
         // Swagger
         option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Verify user account"
            summary: "Use this endpoint to verify newly registered emails"
        };
    };
}
