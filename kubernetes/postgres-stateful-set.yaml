apiVersion: v1
kind: Service
metadata:
  name: postgres-srv
  namespace: go-masterclass
spec:
  ports:
    - port: 5432
      targetPort: 5432
      # Headless service - that exposes each stateful pod(saparate db instance) individualy
  clusterIP: None
  # type: NodePort
  selector:
    role: postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: go-masterclass
spec:
  replicas: 1
  selector:
    matchLabels:
      role: postgres
  serviceName: postgres-srv
  template:
    metadata:
      labels:
        role: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: Always
        livenessProbe:
          exec:
              command:
                - /bin/sh
                - -c
                - exec psql -U postgres -c 'SELECT 1' || exit 1
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec psql -U postgres -c 'SELECT 1' || exit 1
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
        ports:
          - containerPort: 5432
        volumeMounts:
          - name: postgres-persistent-storage
            mountPath: /var/lib/postgresql/data
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                  name: postgres-secret 
                  key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                  name: postgres-secret 
                  key: POSTGRES_PASSWORD
  volumeClaimTemplates:
    - metadata:
        name: postgres-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi