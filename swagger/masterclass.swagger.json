{
  "swagger": "2.0",
  "info": {
    "title": "GRPC Gateway API",
    "version": "1.0",
    "contact": {
      "name": "Bogo Tsvetkov",
      "url": "https://www.linkedin.com/in/bogomil-cvetkov-766a37b5/",
      "email": "cvetkov.bogomil@gmail.com"
    }
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user": {
      "post": {
        "summary": "Use this endpoint to create new user in the system",
        "description": "Register User Ednpoint",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CreateUserRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Register user params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserReq"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/user/login": {
      "post": {
        "summary": "Use this endpoint to generate short-lived access and long-lived refresh token",
        "description": "Login",
        "operationId": "UserService_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/LoginUserRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Login params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserReq"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/user/verify-token": {
      "post": {
        "summary": "Use this endpoint to issue a new access-token using the provided refresh token in /login route",
        "description": "Refresh access token",
        "operationId": "UserService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/RefreshTokenRes"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Refresh token params",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshTokenReq"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "CreateUserReq": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "description": "Register user params",
      "title": "Create User",
      "required": [
        "username",
        "password",
        "fullName",
        "email"
      ]
    },
    "CreateUserRes": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "LoginUserReq": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "description": "Login params",
      "title": "Login User",
      "required": [
        "email",
        "password"
      ]
    },
    "LoginUserRes": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "RefreshTokenReq": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "description": "Refresh token params",
      "title": "Refresh token",
      "required": [
        "token"
      ]
    },
    "RefreshTokenRes": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "passChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Platform user type",
      "title": "User type"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
